authfaileddelayms the number of milliseconds to wait before informing clients that their authentication attempt has failed. setting this parameter makes brute-force login attacks on a database more time-consuming. however, clients waiting for a response from the mongodb server still consume server resources, and this may adversely impact benign login attempts if the server is denying access to many other clients simultaneously.	4
transaction_prealloc_size initial size of a memory pool available to each transaction for various memory allocations.	3
aria_sort_buffer_size the buffer that is allocated when sorting the index when doing a repair or when creating indexes with createindex or altertable.	3
synchronize_seqscans this allows sequential scans of large tables to synchronize with each other, so that concurrent scans read the same block at about the same time and hence share the i/o workload.	1
addinputfilter cself maps the filename extension extension to the filters which will process client requests and post input when they are received by the server.	2
unique_hostname if you want to have multiple machines with the same hostname you must give each machine a different unique hostname so forwarding loops can be detected.	0
adaptation_send_username this sends authenticated http client username (if available) to the adaptation service.	0
buffersize the cself directive specifies the amount of data in bytes that will be buffered before being read from or written to each request.	3
icp_port the port number where squid sends and receives icp queries to and from neighbor caches.	0
enable_bitmapscan enables or disables the query planner's use of bitmap-scan plan types. the default is on. the task of the planner/optimizer is to create an optimal execution plan. a given sql query (and hence, a query tree) can be actually executed in a wide variety of different ways, each of which will produce the same set of results. if it is computationally feasible, the query optimizer will examine each of these possible execution plans, ultimately selecting the execution plan that is expected to run the fastest.	1
threadsperchild this directive sets the number of threads created by each child process. the child creates these threads at startup and never creates more. if using an mpm like mpm_winnt, where there is only one child process, this number should be high enough to handle the entire load of the server. if using an mpm like worker, where there are multiple child processes, the total number of threads should be high enough to handle the common load on the server.	3
eq_range_index_dive_limit limit used to speed up queries listed by long nested ins. the optimizer will use existing index statistics instead of doing index dives for equality ranges if the number of equality ranges for the index is larger than or equal to this number. if set to 0 (unlimited, the default), index dives are always used.	1
createrollbackdatafiles flag that determines whether mongodb creates rollback files that contains documents affected during a rollback.	2
dns_children the maximum number of processes spawn to service dns name lookups. if you limit it too few squid will have to wait for them to process a backlog of requests, slowing it down. if you allow too many they will use ram and other system resources noticably. the maximum this may be safely set to is 32.	3
binlog_stmt_cache_size the size of the memory buffer for the binary log to hold nontransactional statements issued during a transaction. if you often use large nontransactional statements during transactions, you can increase this cache size to get better performance by reducing or eliminating the need to write to temporary files.	3
disablejavascriptjit the mongodb javascript engine uses spidermonkey, which implements just-in-time (jit) compilation for improved performance when running scripts. to enable the jit, set cself to vdisable.	1
sha256_password_proxy_users this variable controls whether the password built-in authentication plugin supports proxy users.	0
rocksdb_debug_ttl_snapshot_ts for debugging purposes only. sets the snapshot during compaction to now() + debug_set_ttl_snapshot_ts. the value can be positive or negative to simulate a snapshot in the past vs a snapshot created in the 'future'. a value of 0 denotes that the variable is not set. this variable is a no-op in non-debug builds.	2
bulk_insert_buffer_size size in bytes of the per-thread cache tree used to speed up bulk inserts into myisam and aria tables. a value of 0 disables the cache tree.	3
innodb_fast_shutdown the innodb shutdown mode. if the value is vother, innodb does a slow shutdown, a full purge and a change buffer merge before shutting down. if the value is vother (the default), innodb skips these operations at shutdown, a process known as a fast shutdown. if the value is vother, innodb flushes its logs and shuts down cold, as if mysql had crashed; no committed transactions are lost, but the crash recovery operation makes the next startup take longer.	4
compression the connector may use http/1.1 gzip compression in an attempt to save server bandwidth. the acceptable values for the parameter is vdisable (disable compression), venable (allow compression, which causes text data to be compressed), vother (forces compression in all cases), or a numerical integer value (which is equivalent to venable, but specifies the minimum amount of data before the output is compressed). if the content-length is not known and compression is set to "on" or more aggressive, the output will also be compressed. if not specified, this attribute is set to vdisable.	4
cache_store_log logs the activities of the storage manager. shows which objects are ejected from the cache, and which objects are saved and for how long. there are not really utilities to analyze this data, so you can safely disable it (the default). store log uses modular logging outputs.	2
connect_work_size size of the connect work area used for memory allocation.	3
character_set_filesystem the file system character set.	0
timestamp set the time for this client. this is used to get the original timestamp if you use the binary log to restore rows.	0
host_cache_size this variable controls the size of the host cache, as well as the size of the performance schema host_cache table that exposes the cache contents.	3
slow_query_log whether the slow query log is enabled. the value can be vdisable to disable the log or venable to enable the log.	2
sslsessioncache this configures the storage type of the global/inter-process ssl session cache. this cache is an optional facility which speeds up parallel request processing. vdisable: this disables the global/inter-process session cache. this will incur a noticeable speed penalty and may cause problems if using certain browsers, particularly if client certificates are enabled. this setting is not recommended. venable: this makes use of a dbm hashfile on the local disk to synchronize the local openssl memory caches of the server processes. this session cache may suffer reliability issues under high load. venable: this makes use of a high-performance cyclic buffer (approx. size bytes in size) inside a shared memory segment in ram (established via "path to datafile") to synchronize the local openssl memory caches of the server processes. this is the recommended session cache. venable: this makes use of the distcache distributed session caching libraries.	1
sessionattributenamefilter a regular expression used to filter which session attributes will be replicated. an attribute will only be replicated if the implementation class name of the value matches this pattern. if the pattern is zero length or null, all attributes are eligible for replication. the pattern is anchored so the fully qualified class name must fully match the pattern.	2
closemethod name of the zero-argument method to call on a singleton resource when it is no longer required. this is intended to speed up cleanup of resources that would otherwise happen as part of garbage collection. this attribute is ignored if the singleton attribute is vdisable.	1
connpoolmaxshardedconnsperhost sets the maximum size of the legacy connection pools for communication to the shards.	3
mdmuststaple defines if newly requested certificate should have the ocsp must staple flag set or not. if a certificate has this flag, the server is required to send a ocsp stapling response to every client.	2
polltime duration of a poll call in microseconds. lowering this value will slightly decrease latency of connections being kept alive in some cases, but will use more cpu as more poll calls are being made. the default value is 2000 (2ms).	4
loglevel cself adjusts the verbosity of the messages recorded in the error logs (see errorlog directive). the following levels are available, in order of decreasing significance. vother : emergencies - system is unusable. vother : action must be taken immediately. vother : critical conditions. vother : error conditions. vother : warning conditions. vother : normal but significant condition. vother : informational. vother : debug-level messages. vother : trace messages. vother : trace messages. vother : trace messages. vother : trace messages. vother : trace messages. vother : trace messages. vother : trace messages. vother : trace messages.	2
innodb_api_trx_level controls the transaction isolation level on queries processed by the memcached interface. from highest amount of consistency and protection to the least, the isolation levels supported by innodb are: vother, vother, vother, and vother.	4
character_set_server the servers default character set.	0
max_parallel_maintenance_workers sets the maximum number of parallel workers that can be started by a single utility command.	3
mdstaplingrenewwindow control when the stapling responses will be renewed. the longer a response is valid, the longer it can be cached which mean better overall performance for everyone. the shorter the life time, the more rapidly certificate revocations spread to clients. also, service reliability is a consideration.	4
storage.wiredtiger.engineconfig.cachesizegb defines the maximum size of the internal cache that wiredtiger will use for all data. the memory consumed by an index build is separate from the wiredtiger cache memory.	3
read_buffer_size each thread that does a sequential scan for a myisam table allocates a buffer of this size (in bytes) for each table it scans.	3
protocol_version the version of the client/server protocol used by the mysql server.	0
authldapdereferencealiases this directive specifies when mod_authnz_ldap will dereference aliases during ldap operations. valid values : vdisable, vother, vother, venable.	2
fsync if this parameter is venable, the pgsql server will try to make sure that updates are physically written to disk, by issuing fsync() system calls or various equivalent methods (see cother). this ensures that the database cluster can recover to a consistent state after an operating system or hardware crash. while turning off fsync is often a performance benefit, this can result in unrecoverable data corruption in the event of a power failure or system crash.	4
rlimitcpu takes 1 or 2 parameters. the first parameter sets the soft resource limit for all processes and the second parameter sets the maximum resource limit. either parameter can be a number, or max to indicate to the server that the limit should be set to the maximum allowed by the operating system configuration. raising the maximum resource limit requires that the server is running as root or in the initial startup phase.	3
ldapconnectionpooluselatencyforhostpriority a boolean that determines whether the ldap connection pool (see cother) should use latency of the ldap servers to determine the connection order (from lowest latency to highest).	1
log_timestamps this variable controls the time zone of timestamps in messages written to the error log, and in general query log and slow query log messages written to files.	0
innodb_buffer_pool_dump_at_shutdown specifies whether to record the pages cached in the innodb buffer pool when the mysql server is shut down, to shorten the warmup process at the next restart.	1
max_parallel_workers sets the maximum number of workers that the system can support for parallel operations.	3
auto_generate_certs this variable controls whether the server autogenerates ssl key and certificate files in the data directory.	2
bufferedlogs the cself directive causes cother to store several log entries in memory and write them together to disk, rather than writing them after each request. on some systems, this may result in more efficient disk access and hence higher performance.	1
securelisten enables ssl encryption for the specified port.	4
extra_port port number to use for tcp connections in a one-thread-per-connection manner.	0
socket.appreadbufsize each connection that is opened up in tomcat get associated with a read buffer. this attribute controls the size of this buffer. by default this read buffer is sized at 8192 bytes. for lower concurrency, you can increase this to buffer more data. for an extreme amount of keep alive connections, decrease this number or increase your heap size.	3
socket on unix-like systems, this is the name of the socket file used for local client connections, by default /tmp/mysql.sock, often changed by the distribution, for example /var/lib/mysql/mysql.sock. on windows, this is the name of the named pipe used for local client connections, by default mysql. on windows, this is not case-sensitive.	0
txbufsize the send buffer size on the socket. default value is 43800 bytes.	3
client_netmask a netmask for client addresses in log files and cachemgr output.	0
innodb_data_home_dir directory path for all innodb data files in the shared tablespace.	0
wsrep_data_home_dir directory where wsrep provider will store its internal files.	0
proxy_user if the current client is a proxy for another user, this variable is the proxy user name. otherwise, this variable is null.	0
sslverifydepth this directive sets how deeply mod_ssl should verify before deciding that the clients don't have a valid certificate. a depth of vother means that self-signed client certificates are accepted only, the default depth of vother means the client certificate can be self-signed or has to be signed by a ca which is directly known to the server.	2
setoutputfilter the cself directive sets the filters which will process responses from the server before they are sent to the client.	2
cacheenable enable caching of specified urls using a specified storage manager.	1
rlimitmem takes 1 or 2 parameters. the first parameter sets the soft resource limit for all processes and the second parameter sets the maximum resource limit. either parameter can be a number, or max to indicate to the server that the limit should be set to the maximum allowed by the operating system configuration. raising the maximum resource limit requires that the server is running as root or in the initial startup phase.	3
port port to listen for tcp/ip connections. if set to 0, will default to, in order of preference, the mysql_tcp_port environment variable, /etc/services, built-in default (3306).	0
audit_log_buffer_size this variable controls the size of that buffer, in bytes. this variable controls the size of that buffer, in bytes.	3
ssloptions.exportcertdata when this option is enabled, additional cgi/ssi environment variables are created. this bloats up the environment a little bit which is why you have to use this option to enable it on demand.	2
h2push this directive toggles the usage of the http2 server push protocol feature. the http2 protocol allows the server to push other resources to a client when it asked for a particular one. this is helpful if those resources are connected in some way and the client can be expected to ask for it anyway. the pushing then saves the time it takes the client to ask for the resources itself. on the other hand, pushing resources the client never needs or already has is a waste of bandwidth.	1
lower_case_table_names if set to 0, table names are stored as specified and comparisons are case-sensitive. if set to 1, table names are stored in lowercase on disk and comparisons are not case sensitive.	0
innodb_log_file_size size in bytes of each innodb redo log file in the log group. the combined size can be no more than 4gb prior to mariadb 10.0, and no more than 512gb in mariadb 10.0 and later. larger values mean less disk i/o due to less flushing checkpoint activity, but also slower recovery from a crash.	4
dbdpreparesql for modules such as authentication that repeatedly use a single sql statement, optimum performance is achieved by preparing the statement at startup rather than every time it is used. this directive prepares an sql statement and assigns it a label.	1
connpoolmaxconnsperhost sets the maximum size of the legacy connection pools for outgoing connections to other mongod instances in the global connection pool.	3
innodb_adaptive_hash_index if set to venable, the default until mariadb 10.5, the innodb hash index is enabled. based on performance testing, the innodb adaptive hash index helps performance in mostly read-only workloads, and could slow down performance in other environments, especially drop table, truncate table, alter table, or drop index operations.	1
udprxbufsize the receive buffer size on the datagram socket. default value is 25188 bytes.	3
general_log whether the general query log is enabled.	2
maximum_object_size set the default value for max-size parameter on any cache_dir. the value is specified in bytes, and the default is 4 mb. if you wish to get a high bytes hit ratio, you should probably increase this (one 32 mb object hit counts for 3200 10kb hits). if you wish to increase hit ratio more than you want to save bandwidth you should leave this low. if using the lfuda replacement policy you should increase this value to maximize the byte hit rate improvement of lfuda! see cache_replacement_policy for a discussion of this policy.	4
sort_buffer_size each session that must perform a sort allocates a buffer of this size.	3
ldapconnectionpoolmaximumconnectionsperhost the maximum number of connections to keep open to each ldap server.	3
ssiundefinedecho this directive changes the string that cother displays when a variable is not set and "echoed".	0
ldapconnectionpoolidlehosttimeoutsecs the maximum number of seconds that the pooled connections to an ldap server can remain idle before being closed.	4
synchronous_commit specifies whether transaction commit will wait for wal records to be written to disk before the command returns a "success" indication to the client. so, turning cself off can be a useful alternative when performance is more important than exact certainty about the durability of a transaction.	4
hostname when the server starts, this variable is set to the server host name.	0
innodb_adaptive_hash_index whether the innodb adaptive hash index is enabled or disabled. it may be desirable, depending on your workload, to dynamically enable or disable adaptive hash indexing to improve query performance. because the adaptive hash index may not be useful for all workloads, conduct benchmarks with it both enabled and disabled, using realistic workloads.	1
automatic_sp_privileges when this variable has a value of 1 (the default), the server automatically grants the execute and alter routine privileges to the creator of a stored routine, if the user cannot already execute and alter or drop the routine.	0
proxyhtmlenable turns the proxy_html filter on or off.	2
addalt alternate text to display for a file, instead of an icon selected by filename	0
wal_level cself determines how much information is written to the wal. the default value is vother, which writes enough data to support wal archiving and replication, including running read-only queries on a standby server. using a level of vother will increase the wal volume. vother removes all logging except the information required to recover from a crash or immediate shutdown, which can make those operations much faster.	4
metadir specifies the name of the directory in which apache can find meta information files.	0
net_buffer_length the starting size, in bytes, for the connection and thread buffers for each client thread. the size can grow to cother. this variable's session value is read-only. can be set to the expected length of client statements if memory is a limitation.	3
wal_recycle if set to venable (the default), this option causes wal files to be recycled by renaming them, avoiding the need to create new ones. on cow file systems, it may be faster to create new ones.	1
wal_compression turning this parameter on can reduce the wal volume without increasing the risk of unrecoverable data corruption, but at the cost of some extra cpu spent on the compression during wal logging and on the decompression during wal replay.	4
cachereadsize the cself directive sets the minimum amount of data, in bytes, to be read from the backend before the data is sent to the client. setting this to a higher value causes the disk cache to buffer at least this amount before sending the result to the client. this can improve performance when caching content from a reverse proxy.	1
innodb_parallel_read_threads defines the number of threads that can be used for parallel clustered index reads. parallel read threads can improve check table performance.	3
sha256_password_private_key_path this variable is available if mysql was compiled using openssl (see section 6.3.4, “ssl library-dependent capabilities”). it's value is the path name of the rsa private key file for the password authentication plugin.	0
plugin_dir the path name of the plugin directory.	0
ftp_sanitycheck for security and data integrity reasons squid by default performs sanity checks of the addresses of ftp data connections ensure the data connection is to the requested server. if you need to allow ftp connections to servers using another ip address for the data connection turn this off.	4
character_sets_dir the directory where character sets are installed.	0
languagepriority the cself sets the precedence of language variants for the case where the client does not express a preference, when handling a multiviews request.	0
startthreads number of threads created on startup. as the number of threads is dynamically controlled depending on the load, there is usually little reason to adjust this parameter.	3
daemon_memcached_w_batch_size specifies how many memcached write operations, such as add, set, and incr, to perform before doing a commit to start a new transaction. this value is set to 1 by default, on the assumption that data being stored is important to preserve in case of an outage and should immediately be committed. when storing noncritical data, you might increase this value to reduce the overhead from frequent commits; but then the last n minus 1 uncommitted write operations could be lost if a crash occurs.	4
innodb_log_checkpoint_now enable this debug option to force innodb to write a checkpoint.	2
aof-use-rdb-preamble when rewriting the aof file, redis is able to use an rdb preamble in the aof file for faster rewrites and recoveries. when this option is turned on the rewritten aof file is composed of two different stanzas : [rdb file][aof tail]. when loading redis recognizes that the aof file starts with the "redis" string and loads the prefixed rdb file, and continues loading the aof tail.	1
innodb_stats_persistent_sample_pages number of index pages sampled when estimating cardinality and statistics for indexed columns. increasing this value will increases index statistics accuracy, but use more i/o resources when running analyze table.	4
storage.wiredtiger.engineconfig.journalcompressor specifies the type of compression to use to compress wiredtiger journal. vother: a compression/decompression library designed to balance efficient computation requirements with reasonable compression rates; vother: a data compression library that provides higher compression rates at the cost of more cpu, compared to mongodb's use of vother; vother: a data compression library that provides higher compression rates and lower cpu usage when compared to vother.	4
log_icap this options allows you to control which requests get logged to icap-log. see the icap_log directive for icap log details.	2
basedir the path to the mysql installation base directory.	0
spider_remote_time_zone forces the time zone setting when connecting to backend servers. this can improve connection performance when you know the time zone.	1
acceptcount the maximum queue length for incoming connection requests when all possible request processing threads are in use. any requests received when the queue is full will be refused. the default value is 100.	3
binlog_cache_size the size of the memory buffer to hold changes to the binary log during a transaction. if you often use large transactions, you can increase this cache size to get better performance by reducing or eliminating the need to write to temporary files.	3
threadrenewaldelay if a cother is configured, it will notify this executor about stopped contexts. after a context is stopped, threads in the pool are renewed. to avoid renewing all threads at the same time, this option sets a delay between renewal of any 2 threads.	1
watchdogperiodseconds determines how frequent the storage node watchdog checks the status of the monitored filesystems. if a filesystem on a monitored directory becomes unresponsive, it can take a maximum of nearly twice the value of cother to terminate the mongod.	2
h2direct this directive toggles the usage of the http2 direct mode. direct communication means that if the first bytes received by the server on a connection match the http2 preamble, the http2 protocol is switched to immediately without further negotiation. for clients that have out-of-band knowledge about a server supporting h2c, direct http2 saves the client from having to perform an http1.1 upgrade, resulting in better performance and avoiding the upgrade restrictions on request bodies.	1
optimizer_prune_level if set to venable, the default, the optimizer will use heuristics to prune less-promising partial plans from the optimizer search space. if set to vdisable, heuristics are disabled and an exhaustive search is performed.	1
profiling_history_size number of statements about which profiling information is maintained. if set to vdisable, no profiles are stored.	2
thread_pool_size the number of thread groups in the thread pool.	3
geqo_effort controls the trade-off between planning time and query plan quality in geqo. this variable must be an integer in the range from vother to vother. the default value is vother. larger values increase the time spent doing query planning, but also increase the likelihood that an efficient query plan will be chosen.	4
join_buffer_size minimum size in bytes of the buffer used for queries that cannot use an index, and instead perform a full table scan. increase to get faster full joins when adding indexes is not possible, although be aware of memory issues, since joins will always allocate the minimum size. best left low globally and set high in sessions that require large full joins.	3
sslengine this directive toggles the usage of the ssl/tls protocol engine. this is should be used inside a cother section to enable ssl/tls for a that virtual host. by default the ssl/tls protocol engine is disabled for both the main server and all configured virtual hosts.	2
operationprofiling.mode specifies which operations should be profiled. vdisable : the profiler is off and does not collect any data. this is the default profiler level. vother : the profiler collects data for operations that take longer than the value of slowms. venable : the profiler collects data for all operations.	2
proxyhtmlbufsize in order to parse non html content (stylesheets and scripts) embedded in html documents, mod_proxy_html has to read the entire script or stylesheet into a buffer. this buffer will be expanded as necessary to hold the largest script or stylesheet in a page, in increments of bytes as set by this directive. the default is 8192, and will work well for almost all pages. however, if you know you're proxying pages containing stylesheets and scripts bigger than 8k (that is, for a single script or stylesheet, not in total), it will be more efficient to set a larger buffer size and avoid the need to resize the buffer dynamically during a request.	3
check_constraint_checks if set to vdisable, will disable constraint checks, for example when loading a table that violates some constraints that you plan to fix later.	2
character_sets_dir directory where the character sets are installed.	0
luaoutputfilter provides a means of adding a lua function as an output filter. as with input filters, output filters work as coroutines, first yielding before buffers are sent, then yielding whenever a bucket needs to be passed down the chain, and finally (optionally) yielding anything that needs to be appended to the input data.	2
icap_send_client_username this sends authenticated http client username (if available) to the icap service. the username value is encoded based on the cother option and is sent using the header specified by the cother option.	0
ie_refresh turning this on provides a partial fix to the problem, by causing all ims-refresh requests from older ie versions to check the origin server for fresh content. this reduces hit ratio by some amount (~10% in my experience), but allows users to actually get fresh content when they want it. note because squid cannot tell if the user is using 5.5 or 5.5sp1, the behavior of 5.5 is unchanged from old versions of squid (i.e. a forced refresh is impossible). newer versions of ie will, hopefully, continue to have the new behavior and will be handled based on that assumption. this option defaults to the old squid behavior, which is better for hit ratios but worse for clients using ie, if they need to be able to force fresh content.	2
global_internal_static this directive controls if squid should intercept all requests for /squid-internal-static/ no matter which host the url is requesting (default on setting), or if nothing special should be done for such urls (off setting). the purpose of this directive is to make icons etc work better in complex cache hierarchies where it may not always be possible for all corners in the cache mesh to reach the server generating a directory listing.	1
xbithack the cself directive controls the parsing of ordinary html documents. vdisable : no special treatment of executable files. venable : any text/html file that has the user-execute bit set will be treated as a server-parsed html document. vother : as for venable but also test the group-execute bit.	2
lc_time_names the locale that determines the language used for the date and time functions dayname(), monthname() and date_format(). locale names are language and region subtags, for example en_za or es_us. the default is always en_us regardless of the system's locale setting. see server locale for a full list of supported locales.	0
rocksdb_debug_ttl_rec_ts for debugging purposes only. overrides the ttl of records to now() + debug_ttl_rec_ts. the value can be +/- to simulate a record inserted in the past vs a record inserted in the 'future'. a value of 0 denotes that the variable is not set.	2
deflatememlevel the cself directive specifies how much memory should be used by zlib for compression (a value between 1 and 9).	3
geqo enables or disables genetic query optimization. this is on by default. it is usually best not to turn it off in production.	1
mdstapleothers enable stapling for certificates not managed by cother. ocsp stapling is a pretty simple check that web servers should turn on to provide a performance benefit to any browsers which do ocsp checking.	1
sessionexpiryupdateinterval the cself directive allows sessions to avoid the cost associated with writing the session each request when only the expiry time has changed. this can be used to make a website more efficient or reduce load on a database when using cother. the session is always written if the data stored in the session has changed or the expiry has changed by more than the configured interval. setting the interval to zero disables this directive, and the session expiry is refreshed for each request.	1
removelanguage the cself directive removes any language associations for files with the given extensions.	0
key_buffer_size key_buffer_size is the size of the buffer used for index blocks.	3
concurrent_insert if venable (the default), mysql permits insert and select statements to run concurrently for myisam tables that have no free blocks in the middle of the data file. if vdisable, disables concurrent inserts. if venable, enables concurrent inserts for all myisam tables, even those that have holes.	1
client-query-buffer-limit client query buffers accumulate new commands. they are limited to a fixed amount by default in order to avoid that a protocol desynchronization (for instance due to a bug in the client) will lead to unbound memory usage in the query buffer. however you can configure it here if you have very special needs, such us huge multi/exec requests or alike.	1
innodb_doublewrite if set to venable, the default, to improve fault tolerance innodb first stores data to a doublewrite buffer before writing it to data file, disabling will provide a marginal performance improvement.	4
innodb_change_buffer_max_size maximum size for the innodb change buffer, as a percentage of the total size of the buffer pool.	3
unique_checks if set to venable (the default), uniqueness checks for secondary indexes in innodb tables are performed. if set to vdisable, storage engines are permitted to assume that duplicate keys are not present in input data. if you know for certain that your data does not contain uniqueness violations, you can set this to vdisable to speed up large table imports to innodb.	2
innodb_ft_user_stopword_table this option is used to specify your own innodb fulltext index stopword list on a specific table.	0
rxbufsize the receive buffer size on the socket. default value is 25188 bytes.	3
log_disabled_statements if set, the specified type of statements (slave or stored procedure statements) will not be logged to the general log.	2
hash-max-ziplist-value hashes are encoded using a memory efficient data structure when they have a small number of entries, and the biggest entry does not exceed a given threshold. these thresholds can be configured using the following directives.	3
h2maxworkers this directive sets the maximum number of worker threads to spawn per child process for http2 processing.	3
basedir path to the mariadb installation directory. other paths are usually resolved relative to this base directory.	0
aof-rewrite-incremental-fsync when a child rewrites the aof file, if the following option is enabled the file will be fsync-ed every 32 mb of data generated. this is useful in order to commit the file to the disk more incrementally and avoid big latency spikes.	1
bulk_insert_buffer_size this variable limits the size of the cache tree in bytes per thread. myisam uses a special tree-like cache to make bulk inserts faster for insert ... select, insert ... values (...), (...), ..., and load data when adding data to nonempty tables. setting it to vdisable disables this optimization.	1
mdstaplingrenewwindow the ca issuing a certificate commonly also operates the ocsp responder service and determines how long its signed response about the validity of a certificate are itself valid. the longer a response is valid, the longer it can be cached which mean better overall performance for everyone. the shorter the life time, the more rapidly certificate revocations spread to clients. also, service reliability is a consideration. by adjusting the stapling renew window you can control parts of this yourself. if you make the renew time short (e.g. a short time before the current information expires), you gain maximum cache time. but a service outage (down for maintenance, for example) will affect you. if you renew a long time before expiry, updates will be made more frequent, cause more load on the ca server infrastructure and also more coordination between the child processes of your server.	4
enableelectionhandoff a flag that can reduce the downtime after the primary steps down from either the rs.stepdown() method or the replsetstepdown command.	1
thread_stack stack size for each thread. if set too small, limits recursion depth of stored procedures and complexity of sql statements the server can handle in memory.	3
storage.mmapv1.preallocdatafiles enables or disables the preallocation of data files.	1
privilegesmode this directive trades off performance vs security against malicious, privileges-aware code. in vother mode, each request runs in a secure subprocess, incurring a substantial performance penalty. in vother mode, the server is not protected against escalation of privileges as discussed above.	4
mdstapling cself offers an implementation for providing ocsp stapling information. ocsp stapling is a pretty simple check that web servers should turn on to provide a performance benefit to any browsers which do ocsp checking	1
shardingtaskexecutorpoolmaxconnecting maximum number of simultaneous initiating connections (including pending connections in setup/refresh state) each taskexecutor connection pool can have to a mongod instance.	3
slow_query_log_file the name of the slow query log file.	0
back_log this setting determines the number of outstanding connection requests mariadb can have, or the size of the listen queue for incoming tcp/ip requests.	3
snmp.disabled disables snmp access to mongod. simple network management protocol (snmp) is an application-layer protocol used to manage and monitor network devices and their functions. snmp provides a common language for network devices to relay management information in a local area network (lan) or wide area network (wan).	2
default_transaction_isolation each sql transaction has an isolation level, which can be either vother, vother, vother, or vother. this parameter controls the default isolation level of each new transaction. the default is vother. vother: dirty read possible, nonrepeatable read possible, phantom read possible; vother: dirty read not possible, nonrepeatable read possible, phantom read possible; vother: dirty read not possible, nonrepeatable read not possible, phantom read; possible; vother: dirty read not possible, nonrepeatable read not possible, phantom read not possible.	4
log_timestamps this variable controls the time zone of timestamps in messages written to the error log, and in general query log and slow query log messages written to files.	0
addiconbytype icon to display next to files selected by mime content-type.	0
slow_query_log_file name of the slow query log file.	0
identitycheck this directive enables rfc1413 compliant logging of the remote user name for each connection, where the client machine runs identd or something similar. note that this can cause serious latency problems accessing your server since every request requires one of these lookups to be performed. when firewalls or proxy servers are involved, each lookup might possibly fail and add a latency duration as defined by the identitychecktimeout directive to each hit. so in general this is not very useful on public servers accessible from the internet.	2
crosscontext set to venable if you want calls within this application to servletcontext.getcontext() to successfully return a request dispatcher for other web applications running on this virtual host. set to vdisable (the default) in security conscious environments, to make getcontext() always return null.	4
tcpnodelay if set to venable, the cself option will be set on the server socket, which improves performance under most circumstances. this is set to venable by default.	1
max_parallel_workers_per_gather sets the maximum number of workers that can be started by a single gather or gather merge node.	3
foreign_key_checks if set to venable (the default), foreign key constraints are checked. if set to vdisable, foreign key constraints are ignored, with a couple of exceptions.	2
proxyhctpsize sets the total server-wide size of the threadpool used for the health check workers	3
suexecusergroup the cself directive allows you to specify a username and group for cgi programs to run as.	0
delay_key_write this variable specifies how to use delayed key writes. it applies only to myisam tables. delayed key writing causes key buffers not to be flushed between writes. if delay_key_write is enabled for a table, the key buffer is not flushed for the table on every index update, but only when the table is closed. this speeds up writes on keys a lot, but if you use this feature, you should add automatic checking of all myisam tables by starting the server with the cother system variable set.	1
proxyname if this connector is being used in a proxy configuration, configure this attribute to specify the server name to be returned for calls to request.getservername().	0
tokudb_optimize_throttle table optimization utilizes all available resources by default. this variable allows the table optimization speed to be limited in order to reduce the overall resources used. the limit places an upper bound on the number of fractal tree leaf nodes that are optimized per second. 0, the default, imposes no limit.	1
listencoresbucketsratio a ratio between the number of (online) cpu cores and the number of listeners' buckets can be used to make apache http server create cother / cself listening buckets, each containing its own listening socket on the same port, and then make each child handle a single bucket. cself can improve the scalability when accepting new connections is/becomes the bottleneck. on systems with a large number of cpu cores, enabling this feature has been tested to show significant performances improvement and shorter responses time.	1
socket.txbufsize the socket send buffer size in bytes.	3
lower_case_file_system read-only variable describing whether the file system is case-sensitive. if set to vdisable, file names are case-sensitive. if set to venable, they are not case-sensitive.	2
security.ldap.validateldapserverconfig a flag that determines if the mongod or mongos instance checks the availability of the ldap server as part of its startup: if venable, the mongod or mongos instance performs the availability check and only continues to start up if the ldap server is available. if vdisable, the mongod or mongos instance skips the availability check; i.e. the instance starts up even if the ldap server is unavailable.	4
debug_sync used in debugging to show the interface to the debug sync facility. mariadb needs to be configured with -denable_debug_sync=1 for this variable to be available.	2
preload_buffer_size size in bytes of the buffer allocated when indexes are preloaded.	3
log_min_error_statement controls which sql statements that cause an error condition are recorded in the server log. the current sql statement is included in the log entry for any message of the specified severity or higher. valid values are vother, vother, vother, vother, vother, vother, vother, vother, vother, vother, vother, and vdisable. the default is vother, which means statements causing errors, log messages, fatal errors, or panics will be logged. to effectively turn off logging of failing statements, set this parameter to vdisable. only superusers can change this setting.	2
journalcommitinterval specify an integer between vother and vother signifying the number of milliseconds (ms) between journal commits.	4
ldapsharedcachesize specifies the number of bytes to allocate for the shared memory cache. the default is 500kb. if set to 0, shared memory caching will not be used and every httpd process will create its own cache.	3
ldapconnectionpoolmaximumconnectionsinprogressperhost the maximum number of in-progress connect operations to each ldap server.	3
max_sync_workers_per_subscription maximum number of synchronization workers per subscription. this parameter controls the amount of parallelism of the initial data copy during the subscription initialization or when new tables are added.	3
authdigestshmemsize the cself directive defines the amount of shared memory, that will be allocated at the server startup for keeping track of clients.	3
caching_sha2_password_auto_generate_rsa_keys the server uses this variable to determine whether to autogenerate rsa private/public key-pair files in the data directory if they do not already exist.	2
proxyreceivebuffersize the cself directive specifies an explicit (tcp/ip) network buffer size for proxied http and ftp connections, for increased throughput. it has to be greater than 512 or set to 0 to indicate that the system's default buffer size should be used.	3
storage.indexbuildretry specifies whether mongod rebuilds incomplete indexes on the next start up.	2
innodb_stats_sample_pages gives control over the index distribution statistics by determining the number of index pages to sample. higher values produce more disk i/o, but, especially for large tables, produce more accurate statistics and therefore make more effective use of the query-optimizer. lower values than the default are not recommended, as the statistics can be quite inaccurate.	4
transaction_prealloc_size there is a pertransaction memory pool from which various transaction-related allocations take memory. the initial size of the pool in bytes is cself.	3
h2pushdiarysize specifies the number of maximum entities stored in the push diary. the push diary records a digest (currently using a 64 bit number) of pushed resources (their url) to avoid duplicate pushes on the same connection.	1
storage.inmemory.engineconfig.inmemorysizegb maximum amount of memory to allocate for in-memory storage engine data, including indexes, oplog if the mongod is part of replica set, replica set or sharded cluster metadata, etc.	3
myisam_sort_buffer_size the size of the buffer that is allocated when sorting myisam indexes during a repair table or when creating indexes with create index or alter table.	3
ldapverifyservercert specifies whether to force the verification of a server certificate when establishing an ssl connection to the ldap server.	4
htcp_port the port number where squid sends and receives htcp queries to and from neighbor caches. to turn it venable you want to set it to 4827.	0
security.authorization enable or disable role-based access control (rbac) to govern each user's access to database resources and operations.	4
pid_file the path name of the file in which the server writes its process id.	0
visible_hostname if you want to present a special hostname in error messages, etc, define this. otherwise, the return value of gethostname() will be used. if you have multiple caches in a cluster and get errors about ip-forwarding you must set them to have individual names with this setting.	0
sotimeout the sending and receiving of heartbeats is done on a single thread, hence to avoid blocking this thread forever, you can control the so_timeout value on this socket.	1
addicon this sets the icon to display next to a file ending in name for cother.	0
proxyhtmlinterp this enables perrequest interpolation in cother to and from patterns. if interpolation is not enabled, all rules are precompiled at startup. with interpolation, they must be recompiled for every request, which implies an extra processing overhead. it should therefore be enabled only when necessary.	2
track_activity_query_size specifies the amount of memory reserved to store the text of the currently executing command for each active session, for the pg_stat_activity_query field.	3
https_port the socket address where squid will listen for client requests made over tls or ssl connections.	0
track_activities enables the collection of information on the currently executing command of each session, along with the time when that command began execution.	2
thread_pool_min_threads in bursty environments, after a period of inactivity, threads would normally be retired. when the next burst arrives, it would take time to reach the optimal level. setting this value higher than the default would prevent thread retirement even if inactive.	1
proxy_user set to the proxy user account name if the current client is a proxy, else null.	0
cachereadtime the cself directive sets the minimum amount of elapsed time that should pass before making an attempt to send data downstream to the client. during the time period, data will be buffered before sending the result to the client. this can improve performance when caching content from a reverse proxy. the default of vdisable disables this option.	1
encrypt_tmp_files enables automatic encryption of temporary files, such as those created for filesort operations, binary log file caches, etc. see data at rest encryption.	2
connpoolmaxinuseconnsperhost sets the maximum number of in-use connections at any given time for for outgoing connections to other mongod instances in the legacy global connection pool.	3
wiredtigerconcurrentwritetransactions specify the maximum number of concurrent write transactions allowed into the wiredtiger storage engine.	3
proxyhtmlextended determines whether to fix links in inline scripts, stylesheets, and scripting events. set to on, all scripting events (as determined by cother) and embedded scripts or stylesheets are also processed by the cother rules, according to the flags set for each rule. since this requires more parsing, performance will be best if you only enable it when strictly necessary.	2
character_set_database the character set used by the default database.	0
innodb_ft_total_cache_size the total memory allocated, in bytes, for the innodb full-text search index cache for all tables.	3
checkpoint_timeout maximum time between automatic wal checkpoints. increasing this parameter can increase the amount of time needed for crash recovery.	4
ssl enables ssl connections.	4
auto-aof-rewrite-percentage automatic rewrite of the append only file. redis is able to automatically rewrite the log file implicitly calling bgrewriteaof when the aof log size grows by the specified percentage. this is how it works : redis remembers the size of the aof file after the latest rewrite (if no rewrite has happened since the restart, the size of the aof at startup is used). this base size is compared to the current size. if the current size is bigger than the specified percentage, the rewrite is triggered. also you need to specify a minimal size for the aof file to be rewritten, this is useful to avoid rewriting the aof file even if the percentage increase is reached but it is still pretty small. specify a percentage of zero in order to disable the automatic aof rewrite feature.	1
innodb_default_row_format the cself option defines the default row format for innodb tables and user-created temporary tables. vother: the vother row format is similar to the vother row format, but tables using the vother row format can store even more data on overflow pages than tables using the vother row format. this results in more efficient data storage than tables using the vother row format, especially for tables containing columns using the varbinary, varchar, blob and text data types. however, innodb tables using the vother row format are more efficient. vother: the vother row format is similar to the vother row format, but tables using the vother row format can store even more data on overflow pages than tables using the vother row format. this results in more efficient data storage than tables using the vother row format, especially for tables containing columns using the varbinary, varchar, blob and text data types. vother: the vother row format is similar to the vother row format, but it stores data in a more compact manner that requires about 20% less storage. vother: the vother row format is the original noncompacted row format.	4
storage.engine the storage engine for the mongod database. vother: by avoiding disk i/o, the in-memory storage engine allows for more predictable latency of database operations. vother: mongodb 3.0 provides more granular document-level concurrency control, delivering between 7 and 10 times greater throughput for most write-intensive applications, while maintaining predictable low latency. implementing concurrency control at the document level improves performance significantly when compared to the previous mongodb 2.6 release. in each test, predictable low latency is maintained as the workload is scaled. come back to our blog where we will post benchmark results. vother: the updated mongodb mmapv storage engine implements collection level concurrency control while the new mongodb vother storage engine further improves performance for many workloads by implementing concurrency control at the document level.	4
adaptation_masterx_shared_names for each master transaction (i.e., the http request and response sequence, including all related icap and ecap exchanges), squid maintains a table of metadata. the table entries are (name, value) pairs shared among ecap and icap exchanges. the table is destroyed with the master transaction.	0
ssl_crlpath the path of the directory that contains certificate revocation-list files in pem format.	0
enablelookups set to venable if you want calls to request.getremotehost() to perform dns lookups in order to return the actual host name of the remote client. set to vdisable to skip the dns lookup and return the ip address in string form instead thereby improving performance. by default, dns lookups are disabled.	1
storage_engine the default storage engine for tables. vother: the default storage engine in mysql 5.6. innodb is a transaction-safe (acid compliant) storage engine for mysql that has commit, rollback, and crash-recovery capabilities to protect user data. innodb row-level locking (without escalation to coarser granularity locks) and oracle-style consistent nonlocking reads increase multi user concurrency and performance. innodb stores user data in clustered indexes to reduce i/o for common queries based on primary keys. to maintain data integrity, innodb also supports foreign key referential-integrity constraints. vother: these tables have a small footprint. table-level locking limits the performance in read/write workloads, so it is often used in read-only or read-mostly workloads in web and data warehousing configurations.	4
isapireadaheadbuffer defines the maximum size of the read ahead buffer sent to isapi extensions when they are initially invoked.	3
ignore_db_dirs tells the server that this directory can never be a database.	0
rdb-save-incremental-fsync when redis saves rdb file, if the following option is enabled the file will be fsync-ed every 32 mb of data generated. this is useful in order to commit the file to the disk more incrementally and avoid big latency spikes.	1
directorycheckhandler the cself directive determines whether mod_dir should check for directory indexes or add trailing slashes when some other handler has been configured for the current url.	2
scramiterationcount changes the number of hashing iterations used for all new scramsha passwords. more iterations increase the amount of time required for clients to authenticate to mongodb, but makes passwords less susceptible to brute-force attempts.	4
storage.journal.enabled enable or disable the durability journal to ensure data files remain valid and recoverable.	4
proxyscgisendfile the cself directive enables the scgi backend to let files be served directly by the gateway. this is useful for performance purposes — httpd can use sendfile or other optimizations, which are not possible if the file comes over the backend socket.	1
key_cache_file_hash_size number of hash buckets for open and changed files. if you have many myisam files open you should increase this for faster flushing of changes. a good value is probably 1/10th of the number of possible open myisam files.	1
pidfile the cself directive sets the file to which the server records the process id of the daemon.	0
general_log_file name of the general query log file. if this is not specified, the name is taken from the log-basename setting or from your system hostname with .log as a suffix.	0
proxyhtmlfixups fixes for simple html errors. vother : urls are rewritten to lowercase. vother : backslashes in urls are rewritten to forward slashes. vother : unset any options set at a higher level in the configuration.	2
constraint_exclusion controls the query planner's use of table constraints to optimize queries. the allowed values of cself are venable (examine constraints for all tables), vdisable (never examine constraints), and vother (examine constraints only for inheritance child tables and union all subqueries). partition is the default setting. it is often used with traditional inheritance trees to improve performance.	1
read_rnd_buffer_size this variable is used for reads from myisam tables, and, for any storage engine, for multi-range read optimization. when reading rows from a myisam table in sorted order following a key-sorting operation, the rows are read through this buffer to avoid disk seeks. setting the variable to a large value can improve order by performance by a lot.	3
innodb_change_buffering whether innodb performs change buffering, an optimization that delays write operations to secondary indexes so that the i/o operations can be performed sequentially.	1
innodb_doublewrite the cself variable controls whether the doublwrite buffer is enabled. you might consider disabling the doublewrite buffer if you are more concerned with performance than data integrity.	4
handlersocket_port specify the port to bind to for reads.	0
innodb_support_xa if set to venable, the default, xa transactions are supported. xa support ensures data is written to the binary log in the same order to the actual database, which is critical for replication and disaster recovery, but comes at a small performance cost. if your database is set up to only permit one thread to change data (for example, on a replication slave with only the replication thread writing), it is safe to turn this option off.	4
vhostsecure determines whether the virtual host processes requests with security enhanced by removal of privileges that are rarely needed in a webserver, but which are available by default to a normal unix user and may therefore be required by modules and applications.	4
proxyexpressenable the cself directive controls whether the module will be active.	2
autovacuum_max_workers specifies the maximum number of autovacuum processes (other than the autovacuum launcher) that may be running at any one time.	3
max_connections the maximum permitted number of simultaneous client connections.	3
ldaptrustedmode specifies the ssl/tls mode to be used when connecting to an ldap server. the following modes are supported : vdisable : no encryption. vother.	2
ft_stopword_file the file from which to read the list of stopwords for full-text searches on myisam tables. the server looks for the file in the data directory unless an absolute path name is given to specify a different directory.	0
disconnect_on_expired_password when a user password has expired (see user password expiry), this variable controls how the server handles clients that are not aware of the sandbox mode. if enabled, the client is not permitted to connect, otherwise the server puts the client in a sandbox mode.	0
keepalivetimeout the number of seconds apache httpd will wait for a subsequent request before closing the connection. the tradeoff here is between network bandwidth and server resources. setting cself to a high value may cause performance problems in heavily loaded servers. in no event should you raise this above about 60 seconds, as most of the benefits are lost.	4
maxrequestworkers maximum number of connections that will be processed simultaneously. the maxrequestworkers directive sets the limit on the number of simultaneous requests that will be served. any connection attempts over the maxrequestworkers limit will normally be queued, up to a number based on the listenbacklog directive. once a child process is freed at the end of a different request, the connection will then be serviced.	3
maxlogmessagebuffersize log message buffers are usually recycled and re-used. to prevent excessive memory usage, if a buffer grows beyond this size it will be discarded. the default is 256 characters. this should be set to larger than the typical access log message size.	3
debug_no_thread_alarm disable system thread alarm calls. disabling it may be useful in debugging or testing, never do it in production.	2
mrr_buffer_size size of buffer to use when using multi-range read with range access.	3
ldapcacheentries specifies the maximum size of the primary ldap cache. this cache contains successful search/binds. set it to 0 to turn off search/bind caching.	3
socket.appwritebufsize each connection that is opened up in tomcat get associated with a write buffer. this attribute controls the size of this buffer. by default this write buffer is sized at 8192 bytes. for low concurrency you can increase this to buffer more response data. for an extreme amount of keep alive connections, decrease this number or increase your heap size. the default value here is pretty low, you should up it if you are not dealing with tens of thousands concurrent connections.	3
hot_standby_feedback specifies whether or not a hot standby will send feedback to the primary or upstream standby about queries currently executing on the standby. this parameter can be used to eliminate query cancels caused by cleanup records, but can cause database bloat on the primary for some workloads. feedback messages will not be sent more frequently than once per wal_receiver_status_interval. the default value is vdisable.	2
scriptlogbuffer the size of any put or post entity body that is logged to the file is limited, to prevent the log file growing too big too quickly if large bodies are being received. by default, up to 1024 bytes are logged, but this can be changed with this directive.	3
h2serializeheaders this directive toggles if http2 requests shall be serialized in http1.1 format for processing by httpd core or if received binary data shall be passed into the request_recs directly. serialization will lower performance, but gives more backward compatibility in case custom filters/hooks need it.	4
innodb_read_io_threads the number of i/o threads for read operations in innodb. if you have a high end i/o subsystem and you see more than 64 × innodb_read_io_threads pending read requests in showengine innodb status output, you might improve performance by increasing the value of innodb_read_io_threads.	3
wal_buffers the amount of shared memory used for wal data that has not yet been written to disk. however, setting this value to at least a few megabytes can improve write performance on a busy server where many clients are committing at once.	3
myisam_max_sort_file_size the maximum size of the temporary file that mysql is permitted to use while recreating a myisam index. if the file size would be larger than this value, the index is created using the key cache instead, which is slower. if myisam index files exceed this size and disk space is available, increasing the value may help performance.	3
external_user external user name set by the plugin used to authenticate the client.	0
log_statement_stats  for each query, output performance statistics of the respective module to the server log. this is a crude profiling instrument, similar to the unix getrusage() operating system facility.	2
emulate_httpd_log the cache can emulate the log file format which many 'httpd' programs use. to disable/enable this emulation, set cself to vdisable or venable. the default is to use the native log format since it includes useful information squid-specific log analyzers use.	2
hostnamelookups this directive enables dns lookups so that host names can be logged (and passed to cgis/ssis in remotehost). the value double refers to doing double-reverse dns lookup. that is, after a reverse lookup is performed, a forward lookup is then performed on that result. the default is vdisable in order to save the network traffic for those sites that don't truly need the reverse lookups done. it is also better for the end users because they don't have to suffer the extra latency that a lookup entails. heavily loaded sites should leave this directive vdisable, since dns lookups can take considerable amounts of time.	2
sslusestapling this option enables ocsp stapling, as defined by the "certificate status request" tls extension specified in rfc 6066. if enabled (and requested by the client), mod_ssl will include an ocsp response for its own certificate in the tls handshake. ocsp stapling is a pretty simple check that web servers should turn on to provide a performance benefit to any browsers which do ocsp checking.	1
processorcache the protocol handler caches processor objects to speed up performance. this setting dictates how many of these objects get cached.	1
brotlicompressionquality the cself directive specifies the compression quality (a value between vother and vother). higher quality values result in better, but also slower compression.	4
storage.wiredtiger.indexconfig.prefixcompression enables or disables prefix compression for index data. specify venable for cself to enable prefix compression for index data, or vdisable to disable prefix compression for index data.	4
sslproxyengine this is usually used inside a cother section to enable ssl/tls for proxy usage in a particular virtual host.	4
version the version number for the server.	0
track_io_timing enables timing of database i/o calls. this parameter is vdisable by default, because it will repeatedly query the operating system for the current time, which may cause significant overhead on some platforms.	2
proxyhtmlmeta turns on or off extra preparsing of metadata in html "head" sections. if not required, turning cself vdisable will give a small performance boost by skipping this parse step.	2
max_delayed_threads limits to the number of insert delayed threads.	3
globalconnpoolidletimeoutminutes sets the time limit that connection in the legacy global connection pool can remain idle before being closed.	4
udptxbufsize the send buffer size on the datagram socket. default value is 43800 bytes.	3
join_buffer_space_limit maximum size in bytes of the query buffer, by default 1024*128*10. see block-based join algorithms.	3
net.maxincomingconnections the maximum number of simultaneous connections that mongos or mongod will accept. this setting has no effect if it is higher than your operating system’s configured maximum connection tracking threshold.	3
announce_file the contents of this file will be included in the announce registration messages.	0
optimizer_trace_max_mem_size limits the memory used while tracing a query by specifying the maximum allowed cumulated size, in bytes, of stored optimizer traces.	3
debug available in debug builds only. used in debugging through the dbug library to write to a trace file. just using cself will write a trace of what mysqld is doing to /tmp/mysqld.trace.	2
update_process_title enables updating of the process title every time a new sql command is received by the server. this setting defaults to venable on most platforms, but it defaults to vdisable on windows due to that platform's larger overhead for updating the process title.	2
extendedstatus this option tracks additional data per worker about the currently executing request and creates a utilization summary. the collection of extended status information can slow down the server.	2
pollerthreadcount number of threads used to poll kept alive connections.	3
security.javascriptenabled enables or disables the server-side javascript execution. when disabled, you cannot use operations that perform server-side execution of javascript code, such as the "where" query operator, mapreduce command and the db.collection.mapreduce() method.	2
system_time_zone the server system time zone.	0
appendonly by default redis asynchronously dumps the dataset on disk. this mode is good enough in many applications, but an issue with the redis process or a power outage may result into a few minutes of writes lost (depending on the configured save points). the append only file is an alternative persistence mode that provides much better durability. for instance using the default data fsync policy (see later in the config file) redis can lose just one second of writes in a dramatic event like a server power outage, or a single write if something wrong with the redis process itself happens, but the operating system is still running correctly. aof and rdb persistence can be enabled at the same time without problems. if the aof is enabled on startup redis will load the aof, that is the file with the better durability guarantees.	4
ssl_cert the path name of the server ssl public key certificate file in pem format.	0
ssl_engine the openssl engine to use. you will need to set this if you would like to use hardware ssl acceleration for example.	4
tcp-backlog  tcp listen() backlog. in high requests-per-second environments you need an high backlog in order to avoid slow clients connections issues. note that the linux kernel will silently truncate it to the value of /proc/sys/net/core/somaxconn so make sure to raise both the value of somaxconn and tcp_max_syn_backlog in order to get the desired effect.	1
lc_time_names this variable specifies the locale that controls the language used to display day and month names and abbreviations.	0
encrypt_tmp_disk_tables enables automatic encryption of all internal on-disk temporary tables that are created during query execution if cother=venable is set.	2
rocksdb_enable_2pc enable two phase commit for myrocks. when set, myrocks will keep its data consistent with the binary log (in other words, the server will be a crash-safe master). the consistency is achieved by doing two-phase xa commit with the binary log.	4
heartbeatlisten the cself directive specifies the multicast address on which the server will listen for status information from cother-enabled servers. this address will usually correspond to a configured cother on an origin server.	0
plugin_dir path to the plugin directory. for security reasons, either make sure this directory can only be read by the server, or set cother.	0
superuser_reserved_connections determines the number of connection slots that are reserved for connections by postgresql superusers. at most max_connections connections can ever be active simultaneously. whenever the number of active concurrent connections is at least max_connections minus superuser_reserved_connections, new connections will be accepted only for superusers, and no new replication connections will be accepted.	3
authenticate_cache_garbage_interval the time period between garbage collection across the username cache. this is a trade-off between memory utilization and cpu. only change if you have good reason to.	4
encryption_algorithm which encryption algorithm to use for table encryption. aes_cbc is the recommended one. see table and tablespace encryption.	2
time_zone the current time zone. this variable is used to initialize the time zone for each client that connects.	0
datadir the path to the mysql server data directory.	0
h2minworkers this directive sets the minimum number of worker threads to spawn per child process for http2 processing.	3
replwriterthreadcount number of threads to use to apply replicated operations in parallel.	3
luainputfilter provides a means of adding a lua function as an input filter. as with output filters, input filters work as coroutines, first yielding before buffers are sent, then yielding whenever a bucket needs to be passed down the chain, and finally (optionally) yielding anything that needs to be appended to the input data.	2
luascope specify the life cycle scope of the lua interpreter which will be used by handlers in this "directory." the default is vother. vother: use the interpreter once and throw it away. vother: use the interpreter to handle anything based on the same file within this request, which is also request scoped. vother: same as request but attached to the connection_rec. vother: use the interpreter for the lifetime of the thread handling the request (only available with threaded mpms). vother: this one is different than others because the server scope is quite long lived, and multiple threads will have the same server_rec. to accommodate this, server scoped lua states are stored in an apr resource list. the min and max arguments specify the minimum and maximum number of lua states to keep in the pool. generally speaking, the thread and server scopes execute roughly 2-3 times faster than the rest, because they don't have to spawn new lua states on every request (especially with the event mpm, as even keepalive requests will use a new thread for each request). if you are satisfied that your scripts will not have problems reusing a state, then the vother or vother scopes should be used for maximum performance. while the vother scope will provide the fastest responses, the vother scope will use less memory, as states are pooled, allowing f.x. 1000 threads to share only 100 lua states, thus using only 10% of the memory required by the vother scope.	4
effective_io_concurrency sets the number of concurrent disk i/o operations that postgresql expects can be executed simultaneously. raising this value will increase the number of i/o operations that any individual postgresql session attempts to initiate in parallel.	3
spider_remote_autocommit sets the auto-commit mode when connecting to backend servers. this can improve connection time performance.	1
maximum_object_size_in_memory objects greater than this size will not be attempted to kept in the memory cache. this should be set high enough to keep objects accessed frequently in memory to improve performance whilst low enough to keep larger objects from hoarding cache_mem.	3
repl-disable-tcp-nodelay disable tcp_nodelay on the replica socket after sync? if you select "yes" redis will use a smaller number of tcp packets and less bandwidth to send data to replicas. but this can add a delay for the data to appear on the replica side, up to 40 milliseconds with linux kernels using a default configuration. if you select "no" the delay for data to appear on the replica side will be reduced but more bandwidth will be used for replication. by default we improve for low latency, but in very high traffic conditions or when the master and replicas are many hops away, turning this to "yes" may be a good idea.	4
appendfsync the fsync() call tells the operating system to actually write data on disk instead of waiting for more data in the output buffer. some os will really flush data on disk, some other os will just try to do it asap. redis supports three different modes : vdisable : don't fsync, just let the os flush the data when it wants, which is faster. venable : fsync after every write to the append only log, which is slow but safest. vother : fsync only one time every second, compromise. the default is vother, as that's usually the right compromise between speed and data safety. it's up to you to understand if you can relax this to vdisable that will let the operating system flush the output buffer when it wants, for better performance (but if you can live with the idea of some data loss consider the default persistence mode that's snapshotting), or on the contrary, use venable that's very slow but a bit safer than vother.	4
ldapopcacheentries this specifies the number of entries mod_ldap will use to cache ldap compare operations. the default is 1024 entries. setting it to 0 disables operation caching.	3
archive_mode when archive_mode is enabled, completed wal segments are sent to archive storage by setting archive_command.	2
bind_address by default, the mariadb server listens for tcp/ip connections on a network socket bound to a single address, 0.0.0.0. you can specify an alternative when the server starts using this option; either a host name, an ipv4 or an ipv6 address. in debian and ubuntu, the default bind_address is 127.0.0.1, which binds the server to listen on localhost only. has always been available as a mysqld option, from mariadb 10.3.3 also available as a system variable.	0
ssl_ca the path name of the certificate authority (ca) certificate file in pem format.	0
client_request_buffer_max_size this specifies the maximum buffer size of a client request. it prevents squid eating too much memory when somebody uploads a large file.	3
innodb_compression_level specifies the level of zlib compression to use for innodb compressed tables and indexes. a higher value lets you fit more data onto a storage device, at the expense of more cpu overhead during compression. a lower value lets you reduce cpu overhead when storage space is not critical, or you expect the data is not especially compressible.	4
shardingtaskexecutorpoolmaxsize maximum number of outbound connections each taskexecutor connection pool can open to any given mongod instance.	3
h2copyfiles this directive influences how file content is handled in responses. when off, which is the default, file handles are passed from the requestion processing down to the main connection, using the usual apache setaside handling for managing the lifetime of the file. when set to venable, file content is copied while the request is still being processed and the buffered data is passed on to the main connection. this is better if a third party module is injecting files with different lifetimes into the response.	1
innodb_buffer_pool_load_at_startup specifies that, on mysql server startup, the innodb buffer pool is automatically warmed up by loading the same pages it held at an earlier time.	1
autovacuum_work_mem specifies the maximum amount of memory to be used by each autovacuum worker process.	3
defaultlanguage defines a default language tag to be sent in the content-language header field for all resources in the current context that have not been assigned a language tag by some other means.	0
sendauthinforesponseheaders controls whether the auth information (remote user and auth type) shall be returned as response headers for a forwarded/proxied request. when the remoteipvalve or remoteipfilter mark a forwarded request with the globals.request_forwarded_attribute this authenticator can return the values of httpservletrequest.getremoteuser() and httpservletrequest.getauthtype() as response headers remote-user and auth-type to a reverse proxy. this is useful, e.g., for access log consistency or other decisions to make. if not specified, the default value is vdisable.	4
h2streammaxmemsize this directive sets the maximum number of outgoing data bytes buffered in memory for an active streams. this memory is not allocated per stream as such. allocations are counted against this limit when they are about to be done. stream processing freezes when the limit has been reached and will only continue when buffered data has been sent out to the client.	3
sort_buffer_size each session performing a sort allocates a buffer with this amount of memory.	3
innodb_concurrency_tickets determines the number of threads that can enter innodb concurrently.	3
serveralias the cself directive sets the alternate names for a host, for use with name-based virtual hosts. the serveralias may include wildcards, if appropriate.	0
innodb_ft_cache_size the memory allocated, in bytes, for the innodb fulltext search index cache, which holds a parsed document in memory while creating an innodb fulltext index.	3
max_logical_replication_workers specifies maximum number of logical replication workers. this includes both apply workers and table synchronization workers.	3
enablesendfile this directive controls whether httpd may use the sendfile support from the kernel to transmit file contents to the client. this sendfile mechanism avoids separate read and send operations, and buffer allocations.	1
store_id_children specifies the maximum number of storeid helper processes that squid may spawn and several related options. using too few of these helper processes creates request queues. using too many helpers wastes your system resources.	3
init_file name of a file containing sql statements that will be executed by the server on startup. each statement should be on a new line, and end with a semicolon.	0
dns_testnames the dns tests exit as soon as the first site is successfully looked up.this test can be disabled with the -d command line option.	0
pid_file full path of the process id file.	0
transaction_alloc_block_size size in bytes to increase the memory pool available to each transaction when the available pool is not large enough.	3
wsrep_debug when set to venable (vdisable is default), debug messages will be logged to the error log as well.	2
clone_buffer_size defines the size of the intermediate buffer used when transferring data during a local cloning operation.	3
innodb_page_cleaners the number of page cleaner threads that flush dirty pages from buffer pool instances.	3
sslciphersuite this complex directive uses a colon-separated cipher-spec string consisting of openssl cipher specifications to configure the cipher suite the client is permitted to negotiate in the ssl handshake phase.	4
ldapconnectionpoolminimumconnectionsperhost the minimum number of connections to keep open to each ldap server.	3
maxlogsizekb specifies the maximum size, in kilobytes, for a log line. using a large value for cself may adversely affect system performance and negatively impact database operations.	4
work_mem sets the maximum amount of memory to be used by a query operation (such as a sort or hash table) before writing to temporary disk files.	3
ldapuseconnectionpool specifies whether mongodb should use connection pooling when connecting to the ldap server for authentication/authorization. in software engineering, a connection pool is a cache of database connections maintained so that the connections can be reused when future requests to the database are required. connection pools are used to enhance the performance of executing commands on a database.	1
filterchain this configures an actual filter chain, from declared filters.	2
ttlmonitorenabled to support ttl indexes, mongod instances have a background thread that is responsible for deleting documents from collections with ttl indexes. to disable this worker thread for a mongod, set cself to c_disable.	2
port the tcp/ip port number on which this server waits for a shutdown command. set to -1 to disable the shutdown port. note : disabling the shutdown port works well when tomcat is started using apache commons daemon (running as a service on windows or with jsvc on un*xes). it cannot be used when running tomcat with the standard shell scripts though, as it will prevent shutdown.bat|.sh and catalina.bat|.sh from stopping it gracefully.	0
max_connections determines the maximum number of concurrent connections to the database server.	3
netdb_filename where squid stores it's netdb journal. when enabled this journal preserves netdb state between restarts.	0
geqo_pool_size controls the pool size used by geqo, that is the number of individuals in the genetic population.	3
receivebuffersize the server will set the tcp receive buffer size to the number of bytes specified.	3
sessionenv if set to venable, the cself directive causes the contents of the session to be written to a cgi environment variable called cother.	2
license the type of license the server has.	0
net.compression.compressors specifies the default compressor to use for communication between this mongod or mongos instance. vother: a compression/decompression library designed to balance efficient computation requirements with reasonable compression rates; vother: a data compression library that provides higher compression rates at the cost of more cpu, compared to mongodb’s use of vother; vother: a data compression library that provides higher compression rates and lower cpu usage when compared to vother.	4
net.ssl.mode enables tls/ssl or mixed tls/ssl used for all network connections. the argument to the cother setting can be one of the following. vdisable: the server does not use tls/ssl; vother: connections between servers do not use tls/ssl, for incoming connections, the server accepts both tls/ssl and non tls / non ssl; vother: connections between servers use tls/ssl, for incoming connections, the server accepts both tls/ssl and non tls / non ssl; vother: the server uses and accepts only tls/ssl encrypted connections.	4
max_connections the maximum number of simultaneous client connections.	3
innodb_flush_log_at_trx_commit controls the balance between strict acid compliance for commit operations and higher performance that is possible when commit related i/o operations are rearranged and done in batches. you can achieve better performance by changing the default value but then you can lose transactions in a crash. vother: the default setting of vother is required for full acid compliance. logs are written and flushed to disk at each transaction commit. vother: with a setting of vother, logs are written after each transaction commit and flushed to disk once per second. transactions for which logs have not been flushed can be lost in a crash. vother: with a setting of vother, logs are written and flushed to disk once per second. transactions for which logs have not been flushed can be lost in a crash.	4
aria_repair_threads number of threads to use when repairing aria tables. the value of 1 disables parallel repair.	3
spider_remote_default_database sets the local default database when connecting to backend servers. this can improve connection time performance.	1
innodb_use_purge_thread usually with innodb, data changed by a transaction is written to an undo space to permit read consistency, and freed when the transaction is complete, many, or large, transactions, can cause the main tablespace to grow dramatically, reducing performance. this option, introduced in xtradb 5.1 and removed for 5.5, allows multiple threads to perform the purging, resulting in slower, but much more stable performance.	4
innodb_ibuf_max_size maximum size in bytes of the insert buffer. defaults to half the size of the buffer pool so you may want to reduce if you have a very large buffer pool. if set to 0, the insert buffer is disabled, which will cause all secondary index updates to be performed synchronously, usually at a cost to performance. this percona xtradb variable has not been ported to xtradb 5.6.	4
classname java class name of the implementation to use. this class must implement the org.apache.catalina.server interface. if no class name is specified, the standard implementation will be used.	0
isapilognotsupported logs all requests for unsupported features from isapi extensions in the server error log. this may help administrators to track down problems. once set to venable and all desired isapi modules are functioning, it should be set back to vdisable.	2
character_set_client the character set for statements that arrive from the client.	0
acceptorthreadcount the number of threads to be used to accept connections.	3
max_wal_senders specifies the maximum number of concurrent connections from standby servers or streaming base backup clients	3
large_page_size indicates the size of memory page if large page support (linux only) is enabled. the page size is determined from the hugepagesize setting in /proc/meminfo. see large_pages. deprecated and unused in mariadb 10.5.3 since multiple page size support was added.	3
read_rnd_buffer_size size in bytes of the buffer used when reading rows from a myisam table in sorted order after a key sort. larger values improve order by performance, although rather increase the size by session where the need arises to avoid excessive memory use.	3
full_page_writes when this parameter is venable, the postgresql server writes the entire content of each disk page to wal during the first modification of that page after a checkpoint. turning this parameter off speeds normal operation, but might lead to either unrecoverable data corruption, or silent data corruption, after a system failure.	4
sslstaplingstandardcachetimeout number of seconds before expiring responses in the ocsp stapling cache	4
enablemmap this directive controls whether the httpd may use memory-mapping if it needs to read the contents of a file during delivery. this memory-mapping sometimes yields a performance improvement.	1
innodb_autoinc_lock_mode the lock mode to use for generating auto increment values. it can significantly improve scalability and performance of sql statements that add rows to tables with autoincrement columns. vdisable: in this lock mode, all "insert-like" statements obtain a special table-level auto-inc lock for inserts into tables with autoincrement columns. vother: in this mode, "bulk inserts" use the special auto-inc table-level lock and hold it until the end of the statement. simply put, this lock mode significantly improves scalability while being safe for use with statement-based replication. vother: in this lock mode, no "insert-like" statements use the table-level auto-inc lock, and multiple statements can execute at the same time. this is the fastest and most scalable lock mode, but it is not safe when using statement-based replication or recovery scenarios when sql statements are replayed from the binary log.	4
ft_stopword_file file containing a list of stopwords for use in myisam full-text searches. unless an absolute path is specified the file will be looked for in the data directory.	0
innodb_deadlock_detect this option is used to disable deadlock detection. on high concurrency systems, deadlock detection can cause a slowdown when numerous threads wait for the same lock. at times, it may be more efficient to disable deadlock detection and rely on the cother setting for transaction rollback when a deadlock occurs.	2
insert_id value to be used for the next statement inserting a new auto_increment value.	0
audit_log_read_buffer_size the buffer size for reading from the audit log file, in bytes.	3
dns_defnames normally the res_defnames resolver option is disabled (see res_init(3)). this prevents caches in a hierarchy from interpreting single-component hostnames locally. to allow squid to handle single-component names, enable this option.	0
max_user_connections maximum simultaneous connections permitted for each user account.	3
query_cache_min_res_unit minimum size in bytes of the blocks allocated for query cache results.	3
tls_version which protocol versions the server permits for encrypted connections.	0
innodb_buffer_pool_size the size in bytes of the buffer pool, the memory area where innodb caches table and index data.	3
addcharset the cself directive maps the given filename extensions to the specified content charset (the internet registered name for a given character encoding).	0
icap_preview_enable the icap preview feature allows the icap server to handle the http message by looking only at the beginning of the message body or even without receiving the body at all. in some environments, previews greatly speedup icap processing.	1
bulk_insert_buffer_size size in bytes of the per-thread cache tree used to speed up bulk inserts into myisam and aria tables. a value of 0 disables the cache tree.	3
foreign_key_checks if set to venable foreign key constraints innodb tables are checked, while if set to vdisable, they are not checked. vdisable is not recommended for normal use, though it can be useful in situations where you know the data is consistent, but want to reload data in a different order from that that specified by parent/child relationships.	2
maxkeepaliverequests the maxkeepaliverequests directive limits the number of requests allowed per connection when keepalive is on. if it is set to 0, unlimited requests will be allowed. we recommend that this setting be kept to a high value for maximum server performance.	3
operationprofiling.slowopsamplerate the fraction of slow operations that should be profiled or logged. cself accepts values between vdisable and vother, inclusive.	2
ssloptions.stdenvvars when this option is enabled, the standard set of ssl related cgi/ssi environment variables are created. this per default is disabled for performance reasons, because the information extraction step is a rather expensive operation.	2
read_buffer_size each thread performing a sequential scan (for myisam, aria and merge tables) allocates a buffer of this size in bytes for each table scanned. increase if you perform many sequential scans. if not in a multiple of 4kb, will be rounded down to the nearest multiple. also used in order by's for caching indexes in a temporary file (not temporary table), for caching results of nested queries, for bulk inserts into partitions, and to determine the memory block size of memory tables.	3
metadata_locks_cache_size size of the metadata locks cache, used for reducing the need to create and destroy synchronization objects. it is particularly helpful on systems where this process is inefficient, such as windows xp.	3
aria_pagecache_buffer_size the size of the buffer used for index blocks for aria tables. increase this to get better index handling (for all reads and multiple writes) to as much as you can afford.	3
innodb_stats_auto_recalc causes innodb to automatically recalculate persistent statistics after the data in a table is changed substantially.	2
keepalive the keep-alive extension to http1.0 and the persistent connection feature of http1.1 provide long-lived http sessions which allow multiple requests to be sent over the same tcp connection. in some cases this has been shown to result in an almost 50% speedup in latency times for html documents with many images.	1
proxyvia this directive controls the use of the "via:" http header by the proxy. if set to vdisable, which is the default, no special processing is performed. if a request or reply contains a "via:" header, it is passed through unchanged. if set to venable, each request and reply will get a "via:" header line added for the current host.	2
max_session_mem_used amount of memory a single user session is allowed to allocate. this limits the value of the session variable mem_used.	3
sslproxycarevocationcheck enables certificate revocation list (crl) checking for the remote servers you deal with	2
setinputfilter the cself directive sets the filter or filters which will process client requests and post input when they are received by the server.	2
innodb_force_recovery xtradb/innodb crash recovery mode. vother is the default. the other modes are for recovery purposes only, and no data can be changed while another mode is active. some queries relying on indexes are also blocked. see xtradb/innodb recovery modes for more on mode specifics.	4
pid_filename a filename to write the process-id to.	0
listen ip addresses and ports that the server listens to.	0
thread_pool_oversubscribe determines how many worker threads in a thread group can remain active at the same time once a thread group is oversubscribed due to stalls. the default value is 3. usually, a thread group only has one active worker thread at a time. however, the timer thread can add more active worker threads to a thread group if it detects a stall. there are trade-offs to consider when deciding whether to allow only one thread per cpu to run at a time, or whether to allow more than one thread per cpu to run at a time. allowing only one thread per cpu means that the thread can have unrestricted access to the cpu while its running, but it also means that there is additional overhead from putting threads to sleep or waking them up more frequently. allowing more than one thread per cpu means that the threads have to share the cpu, but it also means that there is less overhead from putting threads to sleep or waking them up.	4
heartbeataddress the cself directive specifies the multicast address to which cother will send status information. this address will usually correspond to a configured cother on a frontend proxy system.	0
sslrenegbuffersize if an ssl renegotiation is required in perlocation context, for example, any use of sslverifyclient in a directory or location block, then mod_ssl must buffer any http request body into memory until the new ssl handshake can be performed. this directive can be used to set the amount of memory that will be used for this buffer.	3
rewriteengine the cself directive enables or disables the runtime rewriting engine. if it is set to vdisable this module does no runtime processing at all.	2
announce_port set the port where announce registration messages will be sent.	0
xmlparsingprotection enables protection so that parsing xml files within a web application does not result in a memory leak. note that memory profilers may not display the gc root associated with this leak making it particularly hard to diagnose. defaults to venable.	2
log_access this options allows you to control which requests gets logged to access0log (see access_log directive). requests denied for logging will also not be accounted for in performance counters.	2
profiling if set to venable (vdisable is default), statement profiling will be enabled.	2
datadir directory where the data is stored.	0
sessionmaxage the cself directive defines a time limit for which a session will remain valid. when a session is saved, this time limit is reset and an existing session can be continued. if a session becomes older than this limit without a request to the server to refresh the session, the session will time out and be removed.	4
url_rewrite_children specifies the maximum number of redirector processes that squid may spawn and several related options. using too few of these helper processes creates request queues. using too many helpers wastes your system resources.	3
systemlog.traceallexceptions print verbose information for debugging. use for additional logging for support-related troubleshooting.	2
thread_stack the stack size for each thread. the default is large enough for normal operation. if the thread stack size is too small, it limits the complexity of the sql statements that the server can handle, the recursion depth of stored procedures, and other memory-consuming actions.	3
taskexecutorpoolsize the number of task executor connection pools to use for a given mongos.	3
access_log configures whether and how squid logs http and icp transactions. if access logging is enabled, a single line is logged for every matching http or icp request.	2
deflatecompressionlevel the cself directive specifies what level of compression should be used, the higher the value, the better the compression, but the more cpu time is required to achieve this.	4
adddescription this sets the description to display for a file, for fancyindexing. file is a file extension, partial filename, wild-card expression or full filename for files to describe. string is enclosed in double quotes.	0
net.tls.mode enables tls used for all network connections. the argument to the cself setting can be one of the following. vdisable: the server does not use tls; vother: connections between servers do not use tls, for incoming connections, the server accepts both tls and non tls; vother: connections between servers use tls, for incoming connections, the server accepts both tls and non tls; vother: the server uses and accepts only tls encrypted connections.	4
strict_password_validation when password validation plugins are enabled, reject passwords that cannot be validated (passwords specified as a hash). this excludes direct updates to the privilege tables.	2
deflatewindowsize the cself directive specifies the zlib compression window size (a value between vother and vother). generally, the higher the window size, the higher can the compression ratio be expected.	4
maintenance_work_mem specifies the maximum amount of memory to be used by maintenance operations. larger settings might improve performance for vacuuming and for restoring database dumps.	3
gtid_cleanup_batch_size normally does not need tuning. how many old rows must accumulate in the mysql.gtid_slave_pos table before a background job will be run to delete them. can be increased to reduce number of commits if using many different engines with cother, or to reduce cpu overhead if using a huge number of different cother. can be decreased to reduce number of old rows in the table.	4
sslstaplingreturnrespondererrors when enabled, mod_ssl will pass responses from unsuccessful stapling related ocsp queries (such as responses with an overall status other than "successful", responses with a certificate status other than "good", expired responses etc) on to the client. if set to vdisable, only responses indicating a certificate status of "good" will be included in the tls handshake.	2
query_cache_size size in bytes available to the query cache.	3
connpoolmaxshardedinuseconnsperhost sets the maximum number of in-use connections at any given time for the legacy sharded cluster connection pools.	3
tmpdir directory for storing temporary tables and files.	0
tokudb_commit_sync whether or not the transaction log is flushed upon transaction commit. flushing has a minor performance penalty, but switching it off means that committed transactions may not survive a server crash.	4
proxyiobuffersize the cself directive adjusts the size of the internal buffer which is used as a scratchpad for the data between input and output. the size must be at least 512. in almost every case, there's no reason to change that value.	3
rocksdb_debug_ttl_read_filter_ts for debugging purposes only. overrides the ttl read filtering time to time + debug_ttl_read_filter_ts. a value of 0 denotes that the variable is not set.	2
filterdeclare this directive declares an output filter together with a header or environment variable that will determine runtime configuration.	2
innodb_commit_concurrency the number of threads that can commit at the same time. a value of 0 (the default) permits any number of transactions to commit simultaneously.	3
utilitythreads the number of threads this service will use for various utility tasks, including recurring ones. the special value of 0 will result in the value of runtime.getruntime().availableprocessors() being used. negative values will result in runtime.getruntime().availableprocessors() + value being used unless this is less than 1 in which case 1 thread will be used. the default value is 1.	3
cachesocachereadtime the cself directive sets the minimum amount of elapsed time that should pass before making an attempt to send data downstream to the client. during the time period, data will be buffered before sending the result to the client. this can improve performance when caching content from a reverse proxy. the default of vdisable disables this option.	1
cachesocachereadsize the cself directive sets the minimum amount of data, in bytes, to be read from the backend before the data is sent to the client. the default of zero causes all data read of any size to be passed downstream to the client immediately as it arrives. setting this to a higher value causes the disk cache to buffer at least this amount before sending the result to the client. this can improve performance when caching content from a slow reverse proxy.	3
spider_remote_access_charset forces session character set when connecting to the backend server. this can improve connection time performance.	1
preload_buffer_size the size of the buffer that is allocated when preloading indexes.	3
log_queries_not_using_indexes if you enable this variable with the slow query log enabled, queries that are expected to retrieve all rows are logged.	2
debug_options logging options are set as section, level where each source file is assigned a unique section. lower levels result in less output, full debugging (level 9) can result in a very large log file, so be careful. the magic word "all" sets debugging levels for all sections. the default is to run with "all,1" to record important warnings. the rotate=n option can be used to keep more or less of these logs than would otherwise be kept by logfile_rotate. for most uses a single log should be enough to monitor current events affecting squid.	2
security.ldap.transportsecurity by default, mongod or mongos creates a tls/ssl secured connection to the ldap server. set cself to vdisable to disable tls/ssl between mongod or mongos and the ldap server.	4
startservers the startservers directive sets the number of child server processes created on startup. as the number of processes is dynamically controlled depending on the load, there is usually little reason to adjust this parameter.	3
securelisten enables ssl encryption for the specified port.	4
traceexceptions configures mongod to log full source code stack traces for every database and socket cplusplus exception, for use with debugging. if venable, mongod will log full stack traces.	2
ssloptions.optrenegotiate this enables optimized ssl connection renegotiation handling when ssl directives are used in perdirectory context. by default a strict scheme is enabled where every perdirectory reconfiguration of ssl parameters causes a full ssl renegotiation handshake. when this option is used cother tries to avoid unnecessary handshakes by doing more granular (but still safe) parameter checks. nevertheless these granular checks sometimes may not be what the user expects, so enable this on a perdirectory basis only, please.	1
innodb_cmp_per_index_enabled if set to venable (vdisable is default), per-index compression statistics are stored in the information_schema.innodb_cmp_per_index table. these are expensive to record, so this setting should only be changed with care, such as for performance tuning on development or slave servers.	2
innodb_monitor_enable enables innodb metrics counters.	2
temp_buffers sets the maximum amount of memory used for temporary buffers within each database session. the cost of setting a large value in sessions that do not actually need many temporary buffers is only a buffer descriptor, or about 64 bytes, per increment in temp_buffers.	3
net.serviceexecutor determines the threading and execution model mongos or mongod uses to execute client requests. vdisable: the mongos or mongod uses synchronous networking and manages its networking thread pool on a per connection basis. previous versions of mongodb managed threads in this way. venable: the mongos or mongod uses the new experimental asynchronous networking mode with an adaptive thread pool which manages threads on a per request basis. this mode should have more consistent performance and use less resources when there are more inactive connections than database requests.	1
huge_pages controls whether huge pages are requested for the main shared memory area. the use of huge pages results in smaller page tables and less cpu time spent on memory management, increasing performance.	1
script this directive adds an action, which will activate cgi script when a file is requested using the method of method.	2
serveradmin the cself sets the contact address that the server includes in any error messages it returns to the client.	0
checkspelling this directive enables or disables the spelling module. when enabled, keep in mind that the directory scan which is necessary for the spelling correction will have an impact on the server's performance when many spelling corrections have to be performed at the same time.	2
innodb_thread_concurrency innodb tries to keep the number of operating system threads concurrently inside innodb less than or equal to the limit given by this variable. once the number of threads reaches this limit, additional threads are placed into a wait state within a first in, first out (fifo) queue for execution.	3
handlersocket_address specify the ip address to bind to.	0
maxsessions the maximum number of sessions that can be cached.	3
join_buffer_size the minimum size of the buffer that is used for plain index scans, range index scans, and joins that do not use indexes and thus perform full table scans.	3
dynamic-hz normally it is useful to have an hz value which is proportional to the number of clients connected. this is useful in order, for instance, to avoid too many clients are processed for each background task invocation in order to avoid latency spikes. since the default hz value by default is conservatively set to 10, redis offers, and enables by default, the ability to use an adaptive hz value which will temporary raise when there are many connected clients. when dynamic hz is enabled, the actual configured hz will be used as as a baseline, but multiples of the configured hz value will be actually used as needed once more clients are connected. in this way an idle instance will use little cpu time while a busy instance will be more responsive.	1
lc_messages_dir the directory where error messages are located.	0
balancermember this directive adds a member to a load balancing group.	1
authldapcomparednonserver when set, cself will use the ldap server to compare the dns. it is possible to get false negatives with this approach, but it is much faster. note the cself can speed up dn comparison in most situations.	1
ndb_eventbuffer_max_alloc sets the maximum amount memory (in bytes) that can be allocated for buffering events by the ndb api.	3
defaulticon the cself directive sets the icon to display for files when no specific icon is known, for cother. url-path is a relative url to the icon, or a fully qualified remote url.	0
log_icp_queries if set, icp queries are logged to access-log. you may wish do disable this if your icp load is very high to speed up things or to simplify log analysis.	2
track_functions enables tracking of function call counts and time used.	2
cachelock the cself directive enables the thundering herd lock for the given url space.	1
transaction_isolation the transaction isolation level. the isolation level is the setting that fine-tunes the balance between performance and reliability, consistency, and reproducibility of results when multiple transactions are making changes and performing queries at the same time. you can enforce a high degree of consistency with the default vother level, for operations on crucial data where acid compliance is important. or you can relax the consistency rules with vother or even vother, in situations such as bulk reporting where precise consistency and repeatable results are less important than minimizing the amount of overhead for locking. vother enforces even stricter rules than vother, and is used mainly in specialized situations, such as with xa transactions and for troubleshooting issues with concurrency and deadlocks.	4
shared_buffers sets the amount of memory the database server uses for shared memory buffers. this setting must be at least 128 kilobytes. however, settings significantly higher than the minimum are usually needed for good performance.	3
flush usually, mariadb writes changes to disk after each sql statement, and the operating system handles synchronizing (flushing) it to disk. if set to on, the server will synchronize all changes to disk after each statement.	2
innodb_flush_neighbors specifies whether flushing a page from the innodb buffer pool also flushes other dirty pages in the same extent. flushing such neighbor pages in one operation reduces i/o overhead (primarily for disk seek operations) compared to flushing individual pages at different times.	1
lc_messages_dir this system variable can be specified either as the path to the directory storing the server's error message files or as the path to the directory storing the specific language's error message file.	0
max_worker_processes sets the maximum number of background processes that the system can support.	3
cloud.monitoring.free.state enables or disables free mongodb cloud monitoring. cself accepts the following values : vother : default. you can enable or disable free monitoring during runtime. venable : enables free monitoring at startup; i.e. registers for free monitoring. when enabled at startup, you cannot disable free monitoring during runtime. vdisable : disables free monitoring at startup, regardless of whether you have previously registered for free monitoring. when disabled at startup, you cannot enable free monitoring during runtime.	2
no-appendfsync-on-rewrite when the aof fsync policy is set to always or everysec, and a background saving process (a background save or aof log background rewriting) is performing a lot of i/o against the disk, in some linux configurations redis may block too long on the fsync() call. note that there is no fix for this currently, as even performing fsync in a different thread will block our synchronous write(2) call. in order to mitigate this problem it's possible to use the following option that will prevent fsync() from being called in the main process while a bgsave or bgrewriteaof is in progress. this means that while another child is saving, the durability of redis is the same as "appendfsync none". in practical terms, this means that it is possible to lose up to 30 seconds of log in the worst scenario (with the default linux settings).if you have latency problems turn this to venable. otherwise leave it as vdisable that is the safest pick from the point of view of durability.	4
max_wal_size maximum size to let the wal grow to between automatic wal checkpoints. increasing this parameter can increase the amount of time needed for crash recovery.	4
replication.enablemajorityreadconcern read concern majority is available for use with causally consistent sessions. a query with read concern "majority" returns data that has been acknowledged by a majority of the replica set members. in general, avoid disabling "majority" read concern unless necessary. however, if you have a three-member replica set with a primary-secondary-arbiter (psa) architecture or a sharded cluster with a three-member psa shards, disable to prevent the storage cache pressure from immobilizing the deployment.	4
threadstacksize the size in bytes of the stack used by threads handling client connections	3
sendbuffersize sets the server's tcp send buffer size to the number of bytes specified.	3
heartbeatmaxservers the heartbeatmaxservers directive specifies the maximum number of servers that will be sending requests to this monitor server. it is used to control the size of the shared memory allocated to store the heartbeat info when mod_slotmem_shm is in use.	3
location_rewrite_children the number of location rewriting processes to spawn. if you start too few squid will have to wait for them to process a backlog of urls, slowing it down. if you start too many they will use ram and other system resources.	3
innodb_adaptive_flushing specifies whether to dynamically adjust the rate of flushing dirty pages in the innodb buffer pool based on the workload. adjusting the flush rate dynamically is intended to avoid bursts of i/o activity. this setting is enabled by default.	1
storage.journal.commitintervalms the maximum amount of time in milliseconds that the mongod process allows between journal operations. values can range from vother to vother milliseconds. lower values increase the durability of the journal, at the expense of disk performance.	4
addlanguage the cself directive maps the given filename extension to the specified content language.	0
expensive_subquery_limit number of rows to be examined for a query to be considered expensive, that is, maximum number of rows a subquery may examine in order to be executed during optimization and used for constant optimization.	1
shardedconnpoolidletimeoutminutes sets the time limit that a connection in the legacy sharded cluster connection pool can remain idle before being closed.	4
remoteipproxyprotocol the cself directive enables or disables the reading and handling of the proxy protocol connection header. if enabled with the venable flag, the upstream client must send the header every time it opens a connection or the connection will be aborted unless it is in the list of disabled hosts provided by the cother directive.	2
large_pages whether large page support is enabled. applications that perform a lot of memory accesses may obtain performance improvements by using large pages due to reduced translation lookaside buffer (tlb) misses.	1
lc_messages the locale to use for error messages. the default is enus (language).	0
h2padding determine the range of padding bytes added to payload frames. while more padding bytes give better message length obfuscation, they are also additional traffic.	4
setinputfilter the cself directive sets the filter or filters which will process client requests and post input when they are received by the server.	2
innodb_sort_buffer_size specifies the size of sort buffers used to sort data during creation of an innodb index.	3
ssl_capath the path name of the directory that contains trusted ssl certificate authority (ca) certificate files in pem format.	0
rocksdb_info_log_level filter level for info logs to be written mysqld error log. valid values include vother, vother, vother, vother and vother.	2
rowid_merge_buff_size the maximum size in bytes of the memory available to the rowid-merge strategy.	3
innodb_write_io_threads the number of i/o threads for write operations in innodb.	3
thread_cache_size number of threads server caches for re-use.	3
<virtualhost addr[:port] [addr[:port]] ...> ... </virtualhost> cself are used to enclose a group of directives that will apply only to a particular virtual host. when the server receives a request for a document on a particular virtual host, it uses the configuration directives enclosed in the cself section.	2
authformusername the cself directive specifies the name of an html field which, if present, will contain the username to be used to log in.	0
org.apache.juli.logging.userdatahelper.config the type of logging to use for errors generated by invalid input data. the options are : vother, vother, vother and vother. when vother is used, the period for which errors are logged at debug rather than info is controlled by the system property cother.	2
character_set_connection the character set used for literals specified without a character set introducer and for number-to-string conversion.	0
lower_case_file_system this variable describes the case sensitivity of file names on the file system where the data directory is located. off means file names are case-sensitive, on means they are not case-sensitive.	0
thread_pool_exact_stats if set to venable, provides better queueing time statistics by using a high precision timestamp, at a small performance cost, for the time when the connection was added to the queue. this timestamp helps calculate the queuing time shown in the information schema threadpool_queues table.	4
security.enableencryption enables encryption for the wiredtiger storage engine. you must set to venable to pass in encryption keys and configurations.	4
memory_cache_shared controls whether the memory cache is shared among smp workers. the shared memory cache is meant to occupy cother bytes and replace the non-shared memory cache, although some entities may still be cached locally by workers for now (e.g., internal and in-transit objects may be served from a local memory cache even if shared memory caching is enabled). by default, the memory cache is shared if and only if all of the following conditions are satisfied : squid runs in smp mode with multiple workers, cache_mem is positive, and squid environment supports required ipc primitives (e.g., posix shared memory segments and gcc-style atomic operations). to avoid blocking locks, shared memory uses opportunistic algorithms that do not guarantee that every cachable entity that could have been shared among smp workers will actually be shared.	4
external_refresh_check this option defines an external helper for determining whether to refresh a stale response. it will be called when squid receives a request for a cached response that is stale; the helper can either confirm that the response is stale with a stale response, or extend the freshness of the response, thereby avoiding a refresh check with a fresh response, along with a freshness=nnn keyword.	1
net.wireobjectcheck when venable, the mongod or mongos instance validates all requests from clients upon receipt to prevent clients from inserting malformed or invalid bson into a mongodb database. for objects with a high degree of subdocument nesting, cself can have a small impact on performance.	2
sslcrtvalidator_children specifies the maximum number of certificate validation processes that squid may spawn and several related options.	3
expiresactive this directive enables or disables the generation of the expires and cache-control headers for the document realm in question. if set to vdisable, the headers will not be generated for any document in the realm. if set to venable, the headers will be added to served documents according to the criteria defined by the cother and cother directives.	2
bind_address the mysql server listens on a single network socket for tcp/ip connections. this socket is bound to a single address, but it is possible for an address to map onto multiple network interfaces.	0